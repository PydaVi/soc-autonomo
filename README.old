# SOC Aut√¥nomo

An√°lise modular, automatizada e port√°til de pacotes de rede (PCAP) com foco em ciberseguran√ßa

## Vis√£o Geral

O **SOC Aut√¥nomo** √© um projeto open source, leve e modular cujo objetivo √© facilitar o acesso a ferramentas de ciberseguran√ßa. Ele permite realizar an√°lise automatizada de arquivos PCAP sob uma perspectiva de seguran√ßa, utilizando duas ferramentas amplamente adotadas em ambientes corporativos e de pesquisa: **Suricata** e **Zeek**. A an√°lise √© enriquecida com visualiza√ß√µes no **Elastic SIEM**, tornando poss√≠vel detectar amea√ßas, comportamentos an√¥malos e eventos suspeitos de forma acess√≠vel e reproduz√≠vel.

Este projeto foi iniciado como a documenta√ß√£o da minha jornada de aprendizado pr√°tico em ciberseguran√ßa, onde mergulhei na an√°lise forense buscando compreender de perto o funcionamento de ciberataques reais durante meus estudos para a certifica√ß√£o **CompTIA Security+**, e visa tamb√©m servir como refer√™ncia para outras pessoas interessadas em iniciar nesse campo.

## Principais Caracter√≠sticas

* ‚ú® **Modularidade**: Cada m√≥dulo possui fun√ß√µes espec√≠ficas, permitindo expans√£o futura com novos analisadores e integra√ß√µes.
* üöÄ **Portabilidade**: Totalmente conteinerizado com Docker Compose, ideal para uso em laborat√≥rios locais ou em nuvem.
* üïµÔ∏è‚Äç‚ôÇÔ∏è **Foco em seguran√ßa**: An√°lise centrada em eventos de ciberseguran√ßa.
* ‚öôÔ∏è **Automatiza√ß√£o**: Scripts e Makefile para facilitar execu√ß√£o de testes, ingest√£o de PCAPs e verifica√ß√£o de funcionamento.
* üåç **Acesso Universal**: Projeto livre, gratuito e com uso de tecnologias consagradas open source.

## Estrutura do Projeto

* **modules/00-pcap-forensics**: M√≥dulo principal de forense de pacotes de rede.

  * **scripts/**: Scripts Bash que automatizam a execu√ß√£o do Zeek.
  * **sample-pcaps/**: Arquivos .pcap de exemplo para testes.
  * **zeek/logs/**: Onde os logs do Zeek s√£o armazenados ap√≥s execu√ß√£o.
* **docker-compose.yml**: Define os containers para Suricata, Zeek, Elasticsearch, Kibana, Filebeat, Logstash.
* **Makefile**: Comandos de automa√ß√£o como `make up`, `make stop`, `make check`, entre outros.
* **filebeat.yml**: Configura√ß√£o do Filebeat para ingest√£o de logs no Elastic Stack.

## Como Usar

### Requisitos

* Docker
* Docker Compose
* Sistema Linux (recomendado WSL2, Ubuntu, Parrot ou Kali para ambientes de seguran√ßa)


### Execu√ß√£o

```bash
make up  # Sobe todos os containers
make check  # Verifica se todos est√£o rodando corretamente
make stop  # Derruba todos os containers
```

### Ingest√£o de PCAPs

Coloque os arquivos `.pcap` no diret√≥rio `modules/00-pcap-forensics/sample-pcaps/` e execute:

```bash
make analyze
```
### Ingest√£o de PCAPs

Para carregar todos os dashboards e √≠ndices no kibana, execute:

```bash
make parse
```

Os resultados da an√°lise estar√£o dispon√≠veis nos logs do Zeek e Suricata, al√©m de visualiz√°veis no Kibana (Elastic SIEM).

## Por Qu√™ Esse Projeto?

Este projeto nasceu da minha curiosidade pessoal de explorar e compreender de forma pr√°tica os conceitos de:

* An√°lise de tr√°fego de rede
* Detec√ß√£o de amea√ßas
* Logs e eventos de seguran√ßa
* Arquiteturas modernas de SIEM

Atrav√©s da combina√ß√£o de ferramentas poderosas como Suricata, Zeek e Elastic Stack, todas orquestradas em uma arquitetura moderna que usa orquestra√ß√£o de containers, o SOC Aut√¥nomo busca tornar a ciberseguran√ßa mais acess√≠vel a estudantes, profissionais de infraestrutura, analistas de seguran√ßa e entusiastas.

## Pr√≥ximos Passos

Este reposit√≥rio representa o primeiro m√≥dulo da plataforma. Em breve:

* Novos m√≥dulos com outras abordagens (ex: captura em tempo real, threat intelligence, SOAR, honeypots, Caldera)
* Vers√£o para deploy em nuvem com kubernetes
* Detec√ß√µes com Sigma e KQL
* Integra√ß√£o com scripts de resposta a incidentes

## Contribuindo

Pull requests s√£o bem-vindos. Se voc√™ tiver ideias, achar bugs ou quiser propor m√≥dulos adicionais, abra uma issue ou envie sua contribui√ß√£o.

## Licen√ßa

Este projeto √© distribu√≠do sob a licen√ßa MIT. Veja `LICENSE` para mais detalhes.

üíº Autor

Fabio Augustto
Analista de infraestrutura apaixonado por seguran√ßa, automa√ß√£o e cloud.