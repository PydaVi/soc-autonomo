//
// Validation functions
//
// These validation functions are intended primarily for the validation of user
// input in form controls. Most work with string values.
//

function isDottedForm(strVal) {
    if ((strVal == undefined) || (strVal == null) || (strVal.length < 7))
        return false;

    var rc = true;
    if(strVal.search(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/) != -1) {
        var myArray = strVal.split(/\./);
        if(myArray[0] > 255 || myArray[1] > 255 || myArray[2] > 255 || myArray[3] > 255) {
            rc = false;
        }
    } else {
        rc = false;
    }

    return rc;
}

function isValidNetworkName(strVal) {
   if(strVal.indexOf(" ") != -1) return false;
   return true;
}

function isValidIP(strVal) {
    if ((strVal == undefined) || (strVal == null) || (strVal.length < 7))
        return false;

    var rc = true;
    if (isDottedForm(strVal)) {
        var myArray = strVal.split(/\./);
        if(myArray[0] == 255 && myArray[1] == 255 && myArray[2] == 255 && myArray[3] == 255) {
            rc = false;
        }
    } else {
        rc = false;
    }
    return rc;
}

function isValidInteger(strVal) {
    if ((strVal == undefined) || (strVal == null) || (strVal.length == 0))
        return false;

    var intFound = false;
    var i;
    for (i = 0; i < strVal.length; i++) {
        // Check that current character is number.
        var c = strVal.charAt(i);
        if (c == "-") {
            // minus sign must be come before any numbers
            if (intFound) {
                return false;
            }
        } else if (isDigit(c)) {
            intFound = true;
        } else {
            return false;
        }
    }

    return intFound;
}

function isInRange(strVal, minInt, maxInt) {
    if ((strVal == undefined) || (strVal == null) || (strVal.length == 0))
        return false;

    if (!isValidInteger(strVal))
        return false;

    if ((minInt == undefined) || (minInt == null) ||
        (maxInt == undefined) || (maxInt == null))
        return false;

    var val = parseInt(strVal);
    return ((val >= minInt) && (val <= maxInt));
}

function isValidSigned8(strVal) {
    return isInRange(strVal, -128, 127);
}

function isValidUnsigned8(strVal) {
    return isInRange(strVal, 0, 255);
}

function isValidSigned16(strVal) {
    return isInRange(strVal, -32768, 32767);
}

function isValidUnsigned16(strVal) {
    return isInRange(strVal, 0, 65535);
}

function isValidSigned32(strVal) {
    return isInRange(strVal, -2147483648, 2147483647);
}

function isValidUnsigned32(strVal) {
    return isInRange(strVal, 0, 4294967295);
}


function isEmptyString(strVal, trimFirst) {
    if ((strVal == undefined) ||(strVal == null))
        return true;

    if ((strVal == undefined) ||(trimFirst == null) || (trimFirst == true))
        strVal = trim(strVal);

    return (strVal.length == 0);
}

function trim(strVal) {
    if ((strVal == undefined) ||(strVal == null) || (strVal.length == 0))
        return "";

    // trim leading blanks
    var i = 0;
    while ((i < strVal.length) && (strVal.charAt(i) == " ")) {
        ++i;
    }

    var tmpVal = strVal.substring(i);

    // trim trailing blanks
    i=tmpVal.length;
    while ((i > 0) && (tmpVal.charAt(i-1) == " ")) {
        --i;
    }

    return tmpVal.substring(0, i);
}

function isDigit(c) {
    return ((c >= "0") && (c <= "9"))
}
