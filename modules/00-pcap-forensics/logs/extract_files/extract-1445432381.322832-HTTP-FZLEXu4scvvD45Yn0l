function checkSubmit(form)
{
	var ipcheckres;
	if(form.ipmode.selectedIndex==3) //DISABLE
		return true;
//	if(form.ipmode.value == "STATIC")
	if(form.ipmode.selectedIndex == 0)
	{
		// ipaddress
		ipcheckres = checkIP(form.ip);
		if(ipcheckres == false) return false;
		// subnet
		ipcheckres = checkNetmask(form.subnet);
		if(ipcheckres == false) return false;
		// gateway
		ipcheckres = checkIP(form.gateway);
		if(ipcheckres == false) return false;
	}
	
//	if(form.ipmode.value == "PPPOE")
	if(form.ipmode.selectedIndex == 2)
	{
		if(form.ppp_usr.value == "")
		{
			alert("Please provide the PPPoE user name.");
			form.ppp_usr.focus();
			return false;
		}
		if(form.ppp_pwd.value == "")
		{
			alert("Please provide the password.");
			form.ppp_pwd.focus();
			return false;
		}
		if(form.ppp_pwdcf.value == "")
		{
			alert("Please provide the password.");
			form.ppp_pwdcf.focus();
			return false;
		}
	
		var rTok, ret0=-1, ret1=-1, ret2=-1, ret3=-1, ret4=-1, ret5=-1, ret6=-1, ret7=-1, ret8=-1, ret9=-1;
		rTok = /:/g;  ret0 = form.ppp_usr.value.search(rTok);
		rTok = /</g;  ret1 = form.ppp_usr.value.search(rTok);
		rTok = />/g;  ret2 = form.ppp_usr.value.search(rTok);
		rTok = /&/g;  ret3 = form.ppp_usr.value.search(rTok);
		rTok = /\'/g;  ret4 = form.ppp_usr.value.search(rTok);
		rTok = /\"/g;  ret5 = form.ppp_usr.value.search(rTok);
		rTok = /\./g;  ret6 = form.ppp_usr.value.search(rTok);
		rTok = /@/g;  ret7 = form.ppp_usr.value.search(rTok);
		rTok = /,/g;  ret8 = form.ppp_usr.value.search(rTok);
		rTok = / /g;  ret9 = form.ppp_usr.value.search(rTok);
		
		if(ret0>=0 || ret1>=0 || ret2>=0 || ret3>=0 || ret4>=0 || ret5>=0 || ret6>=0 || ret7>=0 || ret8>=0 || ret9>=0)
		{
			alert("You should not use following characters in username : :< >&,\"\'.@blanks");
			form.ppp_usr.select();
			return false;
		}
		if(form.ppp_pwdcf.value != form.ppp_pwd.value)
		{
			alert("Password mismatch. Please confirm again");
			form.ppp_pwd.select();
			return false;
		}
		
		ret0=-1;
		rTok = / /g;
		ret0 = form.ppp_pwd.value.search(rTok);
		if(ret0>=0)
		{
			alert("You should not use blank characters in password");
			form.ppp_pwd.select();
			return false;
		}
		ret0=-1;
		rTok = / /g;
		ret0 = form.ppp_pwdcf.value.search(rTok);
		if(ret0>=0)
		{
			alert("You should not use blank characters in password");
			form.ppp_pwdcf.select();
			return false;
		}
	}
	if(form.bmanual_dns.selectedIndex==1){
		// primary DNS
		if(form.p_dns.value == "")
		{
			form.p_dns.value = "0.0.0.0";
			form.s_dns.value = "0.0.0.0";
			//return true;
		}
		else
		{
			ipcheckres = checkIP(form.p_dns);
			if(ipcheckres == false) return false;
		}
		// secondary DNS
		if(form.s_dns.value == "")
			form.s_dns.value = "0.0.0.0";
		else
		{
			ipcheckres = checkIP(form.s_dns);
			if(ipcheckres == false) return false;
		}
	}
/*	for(i=0; i<form.elements.length; i++)
	{
		form.elements[i].disabled=false;
	}*/
	// secondary IP
	if(form.second_ip_enb.selectedIndex == 1)
	{
		// ipaddress
		ipcheckres = checkIP(form.second_ip);
		if(ipcheckres == false) return false;
		// subnet
		ipcheckres = checkNetmask(form.second_subnet);
		if(ipcheckres == false) return false;
	}
	return true;
}

function changeManualDNS()
{
	if(document.configure.ipmode.selectedIndex==0){
		document.configure.bmanual_dns.selectedIndex=1;
	}
	if(document.configure.bmanual_dns.selectedIndex==0){
		document.configure.p_dns.disabled=true;
		document.configure.s_dns.disabled=true;
	}else{
		document.configure.p_dns.disabled=false;
		document.configure.s_dns.disabled=false;
	}
}

function changeSecondIP()
{
	if(document.configure.second_ip_enb.selectedIndex==0){
		document.configure.second_ip.disabled=true;
		document.configure.second_subnet.disabled=true;
	}else{
		document.configure.second_ip.disabled=false;
		document.configure.second_subnet.disabled=false;
	}
}
 
function checkvalue()
{
	if(document.configure.ipmode.selectedIndex == 0){ //STATIC
		document.configure.ip.disabled=false;
		document.configure.subnet.disabled=false;
		document.configure.gateway.disabled=false;
		//document.configure.p_dns.disabled=false;
		//document.configure.s_dns.disabled=false;
		document.configure.bmanual_dns.disabled=false;
		//document.configure.bmanual_dns.selectedIndex=1;
		changeManualDNS();
		document.configure.bdhcp_reuseip.disabled=true;
		document.configure.ppp_usr.disabled=true;
		document.configure.ppp_pwd.disabled=true;
		document.configure.ppp_pwdcf.disabled=true;
		document.configure.second_ip_enb.disabled=false;
		changeSecondIP();
	}else if(document.configure.ipmode.selectedIndex == 1){ //DHCP
		document.configure.ip.disabled=true;
		document.configure.subnet.disabled=true;
		document.configure.gateway.disabled=true;
		//document.configure.p_dns.disabled=false;
		//document.configure.s_dns.disabled=false;
		document.configure.bmanual_dns.disabled=false;
		document.configure.bmanual_dns.selectedIndex=0;
		changeManualDNS();
		document.configure.bdhcp_reuseip.disabled=false;
		document.configure.ppp_usr.disabled=true;
		document.configure.ppp_pwd.disabled=true;
		document.configure.ppp_pwdcf.disabled=true;
		document.configure.second_ip_enb.disabled=false;
		changeSecondIP();
	}else if(document.configure.ipmode.selectedIndex == 2){ //PPPOE
		document.configure.ip.disabled=true;
		document.configure.subnet.disabled=true;
		document.configure.gateway.disabled=true;
		//document.configure.p_dns.disabled=false;
		//document.configure.s_dns.disabled=false;
		document.configure.bmanual_dns.disabled=false;
		document.configure.bmanual_dns.selectedIndex=0;
		changeManualDNS();
		document.configure.bdhcp_reuseip.disabled=true;
		document.configure.ppp_usr.disabled=false;
		document.configure.ppp_pwd.disabled=false;
		document.configure.ppp_pwdcf.disabled=false;
		document.configure.second_ip_enb.disabled=false;
		changeSecondIP();
	}else{
		document.configure.ip.disabled=true;
		document.configure.subnet.disabled=true;
		document.configure.gateway.disabled=true;
		document.configure.bmanual_dns.disabled=true;
		document.configure.p_dns.disabled=true;
		document.configure.s_dns.disabled=true;
		document.configure.bdhcp_reuseip.disabled=true;
		document.configure.ppp_usr.disabled=true;
		document.configure.ppp_pwd.disabled=true;
		document.configure.ppp_pwdcf.disabled=true;
		document.configure.second_ip_enb.disabled=true;
		document.configure.second_ip.disabled=true;
		document.configure.second_subnet.disabled=true;
	}
}

function checkIP(comp)
{
	if(comp.value.search(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/) != -1)
	{
		var myArray = comp.value.split(/\./);
		if(myArray[0] > 255 || myArray[1] > 255 || myArray[2] > 255 || myArray[3] > 255)
		{
			alert("Invalid IP address");
			comp.select();
			return false;
		}
		if(myArray[0] == 255 && myArray[1] == 255 && myArray[2] == 255 && myArray[3] == 255)
		{
			alert("Invalid IP address");
			comp.select();
			return false;
		}
	}
	else
	{
		alert("Invalid IP address");
		comp.select();
		return false;
	}
	return true;
}
  
function checkNetmask(comp)
{
	if(comp.value.search(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/) != -1)
	{
		var myArray = comp.value.split(/\./);
		if(myArray[0] > 255 || myArray[1] > 255 || myArray[2] > 255 || myArray[3] > 255)
		{
			alert("Invalid IP address");
			comp.select();
			return false;
		}
	}
	else
	{
		alert("Invalid IP address");
		comp.select();
		return false;
	}
	return true;
}
